"use strict";(self.webpackChunkdocumentation=self.webpackChunkdocumentation||[]).push([[5020],{5946:(e,r,t)=>{t.r(r),t.d(r,{assets:()=>i,contentTitle:()=>a,default:()=>h,frontMatter:()=>n,metadata:()=>c,toc:()=>d});var s=t(4848),o=t(8453);const n={sidebar_position:1,title:"Create Records",description:"Learn to about Create Records!",sidebar_label:"Create Records"},a="Create Records",c={id:"restapi/flow-builder/blocks/database-blocks/create-records",title:"Create Records",description:"Learn to about Create Records!",source:"@site/docs/restapi/flow-builder/blocks/database-blocks/create-records.md",sourceDirName:"restapi/flow-builder/blocks/database-blocks",slug:"/restapi/flow-builder/blocks/database-blocks/create-records",permalink:"/docs/restapi/flow-builder/blocks/database-blocks/create-records",draft:!1,unlisted:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/restapi/flow-builder/blocks/database-blocks/create-records.md",tags:[],version:"current",sidebarPosition:1,frontMatter:{sidebar_position:1,title:"Create Records",description:"Learn to about Create Records!",sidebar_label:"Create Records"},sidebar:"magicSidebar",previous:{title:"Database Blocks",permalink:"/docs/category/database-blocks"},next:{title:"Read Records",permalink:"/docs/restapi/flow-builder/blocks/database-blocks/read-records"}},i={},d=[{value:"1. Create One",id:"1-create-one",level:2},{value:"Properties",id:"properties",level:3},{value:"2. Create Many",id:"2-create-many",level:2}];function l(e){const r={code:"code",h1:"h1",h2:"h2",h3:"h3",p:"p",strong:"strong",...(0,o.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(r.h1,{id:"create-records",children:"Create Records"}),"\n",(0,s.jsx)(r.p,{children:"The CreateOne and CreateMany blocks in Zeromagic allow you to insert data into a Cosmos DB container. These blocks are useful for adding single or multiple records to your database."}),"\n",(0,s.jsx)(r.h2,{id:"1-create-one",children:"1. Create One"}),"\n",(0,s.jsx)(r.p,{children:"Creates a single record in a Cosmos DB container."}),"\n",(0,s.jsx)(r.h3,{id:"properties",children:"Properties"}),"\n",(0,s.jsxs)(r.p,{children:[(0,s.jsx)(r.strong,{children:"Container Name"}),": The name of the Cosmos DB container where the object will be inserted."]}),"\n",(0,s.jsxs)(r.p,{children:[(0,s.jsx)(r.strong,{children:"Records to Add"}),": The object to be inserted into the container."]}),"\n",(0,s.jsxs)(r.p,{children:[(0,s.jsx)(r.strong,{children:"Auto Create"}),": Create a collection if it doesnt exists in the container."]}),"\n",(0,s.jsxs)(r.p,{children:[(0,s.jsx)(r.strong,{children:"Returns"}),": Return a ",(0,s.jsx)(r.code,{children:"val"})," with the ID of newly created record."]}),"\n",(0,s.jsx)(r.h2,{id:"2-create-many",children:"2. Create Many"}),"\n",(0,s.jsx)(r.p,{children:"Creates multiple records in a Cosmos DB container in a single operation."}),"\n",(0,s.jsxs)(r.p,{children:[(0,s.jsx)(r.strong,{children:"Container Name"}),": The name of the Cosmos DB container where the objects will be inserted."]}),"\n",(0,s.jsxs)(r.p,{children:[(0,s.jsx)(r.strong,{children:"Records to Add"}),": An array of objects to be inserted into the container."]}),"\n",(0,s.jsxs)(r.p,{children:[(0,s.jsx)(r.strong,{children:"Auto Create"}),": Create a collection if it doesnt exists in the container."]}),"\n",(0,s.jsxs)(r.p,{children:[(0,s.jsx)(r.strong,{children:"Returns"}),": Return a ",(0,s.jsx)(r.code,{children:"val"})," with the IDs of newly created records."]})]})}function h(e={}){const{wrapper:r}={...(0,o.R)(),...e.components};return r?(0,s.jsx)(r,{...e,children:(0,s.jsx)(l,{...e})}):l(e)}},8453:(e,r,t)=>{t.d(r,{R:()=>a,x:()=>c});var s=t(6540);const o={},n=s.createContext(o);function a(e){const r=s.useContext(n);return s.useMemo((function(){return"function"==typeof e?e(r):{...r,...e}}),[r,e])}function c(e){let r;return r=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:a(e.components),s.createElement(n.Provider,{value:r},e.children)}}}]);