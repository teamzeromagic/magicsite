"use strict";(self.webpackChunkdocumentation=self.webpackChunkdocumentation||[]).push([[5995],{4479:(e,n,a)=>{a.r(n),a.d(n,{assets:()=>o,contentTitle:()=>i,default:()=>p,frontMatter:()=>s,metadata:()=>d,toc:()=>c});var t=a(4848),r=a(8453);const s={sidebar_position:3,title:"Database Operations",description:"Quick Introduction with Query Language Database Operations!",sidebar_label:"Database Operations"},i="Database Operations",d={id:"datasources/zeromagic-query-language/database-operations",title:"Database Operations",description:"Quick Introduction with Query Language Database Operations!",source:"@site/docs/datasources/zeromagic-query-language/database-operations.md",sourceDirName:"datasources/zeromagic-query-language",slug:"/datasources/zeromagic-query-language/database-operations",permalink:"/docs/datasources/zeromagic-query-language/database-operations",draft:!1,unlisted:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/datasources/zeromagic-query-language/database-operations.md",tags:[],version:"current",sidebarPosition:3,frontMatter:{sidebar_position:3,title:"Database Operations",description:"Quick Introduction with Query Language Database Operations!",sidebar_label:"Database Operations"},sidebar:"magicSidebar",previous:{title:"Operators and Property",permalink:"/docs/datasources/zeromagic-query-language/operators-property"},next:{title:"Environment Variables",permalink:"/docs/variables/environment-variables"}},o={},c=[{value:"Read Operations",id:"read-operations",level:2},{value:"Create Operations",id:"create-operations",level:2},{value:"Update Operations",id:"update-operations",level:2},{value:"Delete Operations",id:"delete-operations",level:2}];function l(e){const n={code:"code",h1:"h1",h2:"h2",p:"p",pre:"pre",...(0,r.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.h1,{id:"database-operations",children:"Database Operations"}),"\n",(0,t.jsx)(n.p,{children:"Zeromagic supports a range of database methods to perform CRUD (Create, Read, Update, Delete) operations on data. Available methods include readOne, readMany, createOne, createMany, updateOne, updateMany, deleteOne, and deleteMany, providing comprehensive support for data management tasks."}),"\n",(0,t.jsx)(n.h2,{id:"read-operations",children:"Read Operations"}),"\n",(0,t.jsxs)(n.p,{children:["a) ",(0,t.jsx)(n.code,{children:"readOne"}),": Retrieve a single record by its ",(0,t.jsx)(n.code,{children:"ID"}),"."]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-jsx",metastring:'title="readOne"',children:'{\n\n  "container": "student",\n  "filter":{\n    "id": "1",\n    }\n}\n'})}),"\n",(0,t.jsxs)(n.p,{children:["b) ",(0,t.jsx)(n.code,{children:"readMany"}),": Retrieve multiple records based on specific criteria using ",(0,t.jsx)(n.code,{children:"filter property"}),"."]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-jsx",metastring:'title="readMany"',children:'{\n    "container": "student",\n    "filter":{\n        "@opr" : "and/or",\n        "@sort": { "key": "name", "order": "asc" },\n        "@fields" : ["name","subject"],\n        "id": "1",\n        "age": {\n            "@gt": 20,\n        },\n        "subject" : {\n            "@in": ["science","maths"],\n        }\n    }\n}\n'})}),"\n",(0,t.jsx)(n.h2,{id:"create-operations",children:"Create Operations"}),"\n",(0,t.jsxs)(n.p,{children:["a) ",(0,t.jsx)(n.code,{children:"createOne"}),": Create a new record with the provided data in the ",(0,t.jsx)(n.code,{children:"item property"}),"."]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-jsx",metastring:'title="createOne"',children:'{\n\n  "container": "student",\n   "item": {\n     "id": "1",\n     "age" : 30,\n     "name": "Max",\n     "subject" : ["science" , "biology"] \n    }\n}\n'})}),"\n",(0,t.jsxs)(n.p,{children:["b) ",(0,t.jsx)(n.code,{children:"createMany"}),": Create multiple records in a single operation using the ",(0,t.jsx)(n.code,{children:"items property"}),"."]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-jsx",metastring:'title="createMany"',children:'{\n\n  "container": "student",\n   "items": [\n    {\n     "id": "1",\n     "age" : 30,\n     "name": "Max",\n     "subject" : ["science" , "biology"] \n    },\n    {\n     "id": "2",\n     "age" : 20,\n     "name": "John",\n     "subject" : ["maths"] \n    }\n   ] \n}\n'})}),"\n",(0,t.jsx)(n.h2,{id:"update-operations",children:"Update Operations"}),"\n",(0,t.jsxs)(n.p,{children:["a) ",(0,t.jsx)(n.code,{children:"updateOne"}),": Update an existing record based on its ",(0,t.jsx)(n.code,{children:"ID"})," and new data provided in the ",(0,t.jsx)(n.code,{children:"update property"})," within the query."]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-jsx",metastring:'title="updateOne"',children:'{\n\n  "container": "student",\n  "id": "1", \n   "update": {\n       "age": 25\n   }\n}\n'})}),"\n",(0,t.jsxs)(n.p,{children:["b) ",(0,t.jsx)(n.code,{children:"updateMany"}),": Update multiple records based on ",(0,t.jsx)(n.code,{children:"filter property"})," and new data provided in the ",(0,t.jsx)(n.code,{children:"update property"})," within the query."]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-jsx",metastring:'title="updateMany"',children:'{\n\n  "container": "student",    \n  "filter": {\n     "subject" :  {\n       "@in": ["maths" , "biology"] ,\n     } \n    }, \n   "update": {\n       "department": \'Science\'\n   }\n}\n'})}),"\n",(0,t.jsx)(n.h2,{id:"delete-operations",children:"Delete Operations"}),"\n",(0,t.jsxs)(n.p,{children:["a) ",(0,t.jsx)(n.code,{children:"deleteOne"}),": Delete a single record by its ",(0,t.jsx)(n.code,{children:"ID"}),"."]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-jsx",metastring:'title="deleteOne"',children:'{\n\n  "container": "student",  \n  "id": "1",\n}\n'})}),"\n",(0,t.jsxs)(n.p,{children:["b) ",(0,t.jsx)(n.code,{children:"deleteMany"}),": Delete multiple records based on specific criteria using ",(0,t.jsx)(n.code,{children:"filter property"}),"."]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-jsx",metastring:'title="deleteMany"',children:'{\n\n  "container": "student",   \n  "filter":{\n    "age" : {\n        "@gt": 20, \n    }  \n    }\n}\n'})})]})}function p(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(l,{...e})}):l(e)}},8453:(e,n,a)=>{a.d(n,{R:()=>i,x:()=>d});var t=a(6540);const r={},s=t.createContext(r);function i(e){const n=t.useContext(s);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function d(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:i(e.components),t.createElement(s.Provider,{value:n},e.children)}}}]);