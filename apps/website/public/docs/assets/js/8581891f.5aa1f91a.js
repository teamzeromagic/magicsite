"use strict";(self.webpackChunkdocumentation=self.webpackChunkdocumentation||[]).push([[8395],{4556:(e,r,n)=>{n.r(r),n.d(r,{assets:()=>d,contentTitle:()=>o,default:()=>p,frontMatter:()=>i,metadata:()=>s,toc:()=>c});var a=n(4848),t=n(8453);const i={sidebar_position:2,title:"Operators and Property",description:"Quick Introduction with Query Language Operators and Property!",sidebar_label:"Operators and Property"},o=void 0,s={id:"datasources/zeromagic-query-language/operators-property",title:"Operators and Property",description:"Quick Introduction with Query Language Operators and Property!",source:"@site/docs/datasources/zeromagic-query-language/operators-property.md",sourceDirName:"datasources/zeromagic-query-language",slug:"/datasources/zeromagic-query-language/operators-property",permalink:"/docs/datasources/zeromagic-query-language/operators-property",draft:!1,unlisted:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/datasources/zeromagic-query-language/operators-property.md",tags:[],version:"current",sidebarPosition:2,frontMatter:{sidebar_position:2,title:"Operators and Property",description:"Quick Introduction with Query Language Operators and Property!",sidebar_label:"Operators and Property"},sidebar:"magicSidebar",previous:{title:"Overview",permalink:"/docs/datasources/zeromagic-query-language/overview"},next:{title:"Database Operations",permalink:"/docs/datasources/zeromagic-query-language/database-operations"}},d={},c=[{value:"Filter Property",id:"filter-property",level:2},{value:"1. Logical Operators",id:"1-logical-operators",level:3},{value:"2. Sorting Operators",id:"2-sorting-operators",level:3},{value:"3. Field Selection",id:"3-field-selection",level:3},{value:"4. Comparison Operators:",id:"4-comparison-operators",level:3},{value:"5. String Matching:",id:"5-string-matching",level:3},{value:"Sample Filter Query",id:"sample-filter-query",level:3},{value:"Query Property",id:"query-property",level:2},{value:"1. Container Property: (Required)",id:"1-container-property-required",level:3},{value:"2. Item Property: (Required for <code>createOne</code> method)",id:"2-item-property-required-for-createone-method",level:3},{value:"3. Items Property: (Required for <code>createMany</code> method)",id:"3-items-property-required-for-createmany-method",level:3},{value:"4. Update Property: (Required for <code>updateOne</code> and <code>updateMany</code> method)",id:"4-update-property-required-for-updateone-and-updatemany-method",level:3}];function l(e){const r={code:"code",h2:"h2",h3:"h3",p:"p",pre:"pre",...(0,t.R)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(r.p,{children:"Zeromagic introduces container, operators and properties, providing developers with a structured approach to perform operations on data containers and individual items within those containers. These properties enable efficient data manipulation and management within the Zeromagic platform."}),"\n",(0,a.jsx)(r.h2,{id:"filter-property",children:"Filter Property"}),"\n",(0,a.jsx)(r.p,{children:"The filter property within your Zeromagic queries provides a versatile set of operators to refine your data access. Here's a breakdown of some commonly used operators:"}),"\n",(0,a.jsx)(r.pre,{children:(0,a.jsx)(r.code,{className:"language-jsx",children:'"filter" : {} // fetchs all records\n    (or) \n"filter" : {\n    ...props\n}\n'})}),"\n",(0,a.jsx)(r.h3,{id:"1-logical-operators",children:"1. Logical Operators"}),"\n",(0,a.jsxs)(r.p,{children:[(0,a.jsx)(r.code,{children:"@opr"}),": Combine multiple filter conditions using the logical AND (",(0,a.jsx)(r.code,{children:"and"}),") or OR (",(0,a.jsx)(r.code,{children:"or"}),") operators within this property."]}),"\n",(0,a.jsx)(r.pre,{children:(0,a.jsx)(r.code,{className:"language-jsx",children:'"@opr" : "and"\n    (or)\n"@opr" : "or"\n'})}),"\n",(0,a.jsx)(r.h3,{id:"2-sorting-operators",children:"2. Sorting Operators"}),"\n",(0,a.jsxs)(r.p,{children:[(0,a.jsx)(r.code,{children:"@sort"}),": Specify sorting criteria within this property. Define the key to sort by (",(0,a.jsx)(r.code,{children:"key"}),") and the desired order (",(0,a.jsx)(r.code,{children:'"order"'}),": ",(0,a.jsx)(r.code,{children:'"asc"'})," for ascending, ",(0,a.jsx)(r.code,{children:'"desc"'})," for descending)."]}),"\n",(0,a.jsx)(r.pre,{children:(0,a.jsx)(r.code,{className:"language-jsx",children:'"@sort": { "key": "name", "order": "asc" }\n    (or)\n"@sort": { "key": "name", "order": "desc" }\n'})}),"\n",(0,a.jsx)(r.h3,{id:"3-field-selection",children:"3. Field Selection"}),"\n",(0,a.jsxs)(r.p,{children:[(0,a.jsx)(r.code,{children:"@fields"}),": Define a list of fields ",(0,a.jsx)(r.code,{children:'["<field_1>", "<field_2>", "<field_3>"]'})," you want to retrieve from the records."]}),"\n",(0,a.jsx)(r.pre,{children:(0,a.jsx)(r.code,{className:"language-jsx",children:'"@fields" : ["id","name","price","status"],\n'})}),"\n",(0,a.jsx)(r.h3,{id:"4-comparison-operators",children:"4. Comparison Operators:"}),"\n",(0,a.jsxs)(r.p,{children:[(0,a.jsx)(r.code,{children:"@eq"}),": Exact equality check"]}),"\n",(0,a.jsx)(r.pre,{children:(0,a.jsx)(r.code,{className:"language-jsx",children:'"name": { "@eq": "Max" }\n'})}),"\n",(0,a.jsxs)(r.p,{children:[(0,a.jsx)(r.code,{children:"@ne"}),": Not equal check"]}),"\n",(0,a.jsx)(r.pre,{children:(0,a.jsx)(r.code,{className:"language-jsx",children:'"name": { "@ne": "Max" }\n'})}),"\n",(0,a.jsxs)(r.p,{children:[(0,a.jsx)(r.code,{children:"@gt"}),": Greater than comparison"]}),"\n",(0,a.jsx)(r.pre,{children:(0,a.jsx)(r.code,{className:"language-jsx",children:'"price": { "@gt": 100 }\n'})}),"\n",(0,a.jsxs)(r.p,{children:[(0,a.jsx)(r.code,{children:"@lt"}),": Less than comparison"]}),"\n",(0,a.jsx)(r.pre,{children:(0,a.jsx)(r.code,{className:"language-jsx",children:'"price": { "@lt": 100 }\n'})}),"\n",(0,a.jsxs)(r.p,{children:[(0,a.jsx)(r.code,{children:"@gte"}),": Greater than or equal to comparison."]}),"\n",(0,a.jsx)(r.pre,{children:(0,a.jsx)(r.code,{className:"language-jsx",children:'"price": { "@gte": 120 }\n'})}),"\n",(0,a.jsxs)(r.p,{children:[(0,a.jsx)(r.code,{children:"@lte"}),": Less than or equal to comparison."]}),"\n",(0,a.jsx)(r.pre,{children:(0,a.jsx)(r.code,{className:"language-jsx",children:'"price": { "@lte": 120 }\n'})}),"\n",(0,a.jsx)(r.h3,{id:"5-string-matching",children:"5. String Matching:"}),"\n",(0,a.jsxs)(r.p,{children:[(0,a.jsx)(r.code,{children:"@contains"}),": Check if a string contains a specific substring."]}),"\n",(0,a.jsx)(r.pre,{children:(0,a.jsx)(r.code,{className:"language-jsx",children:'"name": { "@contains": "John Doe" }\n'})}),"\n",(0,a.jsxs)(r.p,{children:[(0,a.jsx)(r.code,{children:"@startswith"}),": Check if a string starts with a specific prefix."]}),"\n",(0,a.jsx)(r.pre,{children:(0,a.jsx)(r.code,{className:"language-jsx",children:'"name": { "@startswith": "John" }\n'})}),"\n",(0,a.jsxs)(r.p,{children:[(0,a.jsx)(r.code,{children:"@in"}),": Check if a value is within a provided list."]}),"\n",(0,a.jsx)(r.pre,{children:(0,a.jsx)(r.code,{className:"language-jsx",children:'"status": { "@in": ["active", "pending"] }\n'})}),"\n",(0,a.jsxs)(r.p,{children:[(0,a.jsx)(r.code,{children:"@nin"}),": Check if a value is not within a provided list."]}),"\n",(0,a.jsx)(r.pre,{children:(0,a.jsx)(r.code,{className:"language-jsx",children:'"status": { "@nin": ["active", "pending"] }\n'})}),"\n",(0,a.jsx)(r.h3,{id:"sample-filter-query",children:"Sample Filter Query"}),"\n",(0,a.jsx)(r.pre,{children:(0,a.jsx)(r.code,{className:"language-jsx",metastring:'title="Example"',children:'{\n"container" : "ecommerce",\n"filter" : {\n        "@opr" : "and",\n        "@sort": { "key": "name", "order": "asc" },\n        "@fields" : ["id","name","price" , "status"],\n        "id": "1",\n        "price": {\n            "@gt": 20,\n            "@lt": 20,\n            "@gte": 20,\n            "@lte": 20\n        },\n        "name" : {\n            "@contains": "John Doe" ,\n            "@startswith": "John", \n            "@eq": "Max",\n            "@ne": "Max",\n        },\n        "status"  : {\n       "@in": ["active", "pending"],\n       "@nin": ["active", "pending"] \n        }\n    } \n}\n'})}),"\n",(0,a.jsx)(r.h2,{id:"query-property",children:"Query Property"}),"\n",(0,a.jsx)(r.h3,{id:"1-container-property-required",children:"1. Container Property: (Required)"}),"\n",(0,a.jsxs)(r.p,{children:[(0,a.jsx)(r.code,{children:"container"}),": Specifies the name of the container on which the operation will be performed. This property allows developers to target specific data containers within their Zeromagic projects."]}),"\n",(0,a.jsx)(r.pre,{children:(0,a.jsx)(r.code,{className:"language-jsx",children:'"container" : "student"\n'})}),"\n",(0,a.jsxs)(r.h3,{id:"2-item-property-required-for-createone-method",children:["2. Item Property: (Required for ",(0,a.jsx)(r.code,{children:"createOne"})," method)"]}),"\n",(0,a.jsxs)(r.p,{children:[(0,a.jsx)(r.code,{children:"item"}),": Represents a single item to be created within a data container. This property encapsulates the attributes and values of the item to be created, facilitating the creation of individual data records."]}),"\n",(0,a.jsx)(r.pre,{children:(0,a.jsx)(r.code,{className:"language-jsx",children:'    "item": {\n      "name": "John Doe",\n      "email": "john.doe@example.com"\n    } // single item to create\n'})}),"\n",(0,a.jsxs)(r.h3,{id:"3-items-property-required-for-createmany-method",children:["3. Items Property: (Required for ",(0,a.jsx)(r.code,{children:"createMany"})," method)"]}),"\n",(0,a.jsxs)(r.p,{children:[(0,a.jsx)(r.code,{children:"items"}),": Contains an array of multiple items to be created within a data container. This property allows developers to create multiple data records simultaneously, streamlining the data creation process."]}),"\n",(0,a.jsx)(r.pre,{children:(0,a.jsx)(r.code,{className:"language-jsx",children:'    "items" : [\n\n     {\n      "name": "John Doe",\n      "email": "john.doe@example.com"\n    } , \n    {\n      "name": "Max Well",\n      "email": "max.well@example.com"\n    }\n    ]   // multiple item to create\n'})}),"\n",(0,a.jsxs)(r.h3,{id:"4-update-property-required-for-updateone-and-updatemany-method",children:["4. Update Property: (Required for ",(0,a.jsx)(r.code,{children:"updateOne"})," and ",(0,a.jsx)(r.code,{children:"updateMany"})," method)"]}),"\n",(0,a.jsxs)(r.p,{children:[(0,a.jsx)(r.code,{children:"update"}),": Defines the properties to be updated for a specific data record. This property specifies the attributes and new values to be applied to the selected record, enabling seamless data updates within Zeromagic containers."]}),"\n",(0,a.jsx)(r.pre,{children:(0,a.jsx)(r.code,{className:"language-jsx",children:'"update": {\n    "name": "Steve"\n    }\n'})})]})}function p(e={}){const{wrapper:r}={...(0,t.R)(),...e.components};return r?(0,a.jsx)(r,{...e,children:(0,a.jsx)(l,{...e})}):l(e)}},8453:(e,r,n)=>{n.d(r,{R:()=>o,x:()=>s});var a=n(6540);const t={},i=a.createContext(t);function o(e){const r=a.useContext(i);return a.useMemo((function(){return"function"==typeof e?e(r):{...r,...e}}),[r,e])}function s(e){let r;return r=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:o(e.components),a.createElement(i.Provider,{value:r},e.children)}}}]);