"use strict";(self.webpackChunkdocumentation=self.webpackChunkdocumentation||[]).push([[511],{7950:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>l,contentTitle:()=>o,default:()=>h,frontMatter:()=>s,metadata:()=>r,toc:()=>c});var i=a(4848),n=a(8453);const s={slug:"build-your-first-graphql-api-in-minutes-with-zeromagic",title:"Build your First GraphQL API in minutes with Zeromagic",tags:["graphql","tutorial","POST"],authors:"rohith",date:"2024-06-10T10:00"},o=void 0,r={permalink:"/docs/blog/build-your-first-graphql-api-in-minutes-with-zeromagic",editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/blog/build-your-first-graphql-api-in-minutes-with-zeromagic/index.md",source:"@site/blog/build-your-first-graphql-api-in-minutes-with-zeromagic/index.md",title:"Build your First GraphQL API in minutes with Zeromagic",description:"GraphqlBanner",date:"2024-06-10T10:00:00.000Z",tags:[{label:"graphql",permalink:"/docs/blog/tags/graphql"},{label:"tutorial",permalink:"/docs/blog/tags/tutorial"},{label:"POST",permalink:"/docs/blog/tags/post"}],readingTime:3.55,hasTruncateMarker:!0,authors:[{name:"Rohith ND",title:"Co-Founder",url:"https://ndrohith09.netlify.app/",email:"ndrohith09@gmail.com",imageURL:"https://avatars.githubusercontent.com/u/73429989?v=4",key:"rohith"}],frontMatter:{slug:"build-your-first-graphql-api-in-minutes-with-zeromagic",title:"Build your First GraphQL API in minutes with Zeromagic",tags:["graphql","tutorial","POST"],authors:"rohith",date:"2024-06-10T10:00"},unlisted:!1,nextItem:{title:"Learn to use For Loops in Workflows",permalink:"/docs/blog/learn-to-use-for-loops-in-workflows"}},l={authorsImageUrls:[void 0]},c=[{value:"Step 1: Login to Project Console",id:"step-1-login-to-project-console",level:3},{value:"Step 2: Create a GraphQL Endpoint",id:"step-2-create-a-graphql-endpoint",level:3},{value:"Step 3: Create a Database",id:"step-3-create-a-database",level:3},{value:"Step 4: Create a logical model",id:"step-4-create-a-logical-model",level:3},{value:"Step 5: Graphql Schema Registry",id:"step-5-graphql-schema-registry",level:3},{value:"Step 5: Test in GraphiQL",id:"step-5-test-in-graphiql",level:3}];function d(e){const t={a:"a",admonition:"admonition",blockquote:"blockquote",code:"code",h3:"h3",img:"img",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,n.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(t.p,{children:(0,i.jsx)(t.img,{alt:"GraphqlBanner",src:a(7636).A+"",width:"1280",height:"720"})}),"\n",(0,i.jsx)(t.p,{children:"GraphQL has taken the API world by storm, offering a powerful and flexible way to query and manipulate data. It allows you to request exactly the data your application needs, leading to cleaner code and faster development."}),"\n",(0,i.jsx)(t.p,{children:"In this blog post, we'll dive into how you can leverage the Zeromagic Platform to create your very first GraphQL API. We'll explore the platform's features and guide you through the setup process, making it easy to get started with GraphQL and unlock its benefits for your projects."}),"\n",(0,i.jsx)(t.h3,{id:"step-1-login-to-project-console",children:"Step 1: Login to Project Console"}),"\n",(0,i.jsxs)(t.p,{children:["Login to ",(0,i.jsx)(t.a,{href:"https://github.com/",children:"Zeromagic Platform"})," and go to you ",(0,i.jsx)(t.code,{children:"Project Console"}),". Now navigate to ",(0,i.jsx)(t.code,{children:"GraphQL"})," in the sidebar of the console."]}),"\n",(0,i.jsx)(t.p,{children:(0,i.jsx)(t.img,{alt:"GraphqlDashboard",src:a(4280).A+"",width:"1148",height:"520"})}),"\n",(0,i.jsx)(t.h3,{id:"step-2-create-a-graphql-endpoint",children:"Step 2: Create a GraphQL Endpoint"}),"\n",(0,i.jsxs)(t.p,{children:["Navigate to ",(0,i.jsx)(t.code,{children:"Create GraphQL"})," button and this will open a form to create a GraphQL endpoint."]}),"\n",(0,i.jsxs)(t.ul,{children:["\n",(0,i.jsx)(t.li,{children:"Name : Name of the Graph API"}),"\n",(0,i.jsx)(t.li,{children:"API Path: Define the base URL path that will be used to access the API endpoints."}),"\n"]}),"\n",(0,i.jsx)(t.admonition,{title:"Important",type:"info",children:(0,i.jsxs)(t.p,{children:[(0,i.jsx)(t.code,{children:"graphql/"})," will be appened to the base URL path. You can not pass anyother parameters such as query parameters, etc in the API Path field."]})}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-jsx",metastring:'title="Example"',children:"API Path: orders/\nFinal GraphQL Endpoint: orders/graphql/\n"})}),"\n",(0,i.jsx)(t.p,{children:(0,i.jsx)(t.img,{alt:"Create Graphql",src:a(1921).A+"",width:"652",height:"322"})}),"\n",(0,i.jsxs)(t.p,{children:["Once created, click on the ",(0,i.jsx)(t.code,{children:"GraphiQL"})," button, this will take you to the GraphQL console."]}),"\n",(0,i.jsx)(t.h3,{id:"step-3-create-a-database",children:"Step 3: Create a Database"}),"\n",(0,i.jsxs)(t.p,{children:["Create a database (BYOD or on-premises ) named ",(0,i.jsx)(t.code,{children:"Forests"})," in your Database section in the project console."]}),"\n",(0,i.jsx)(t.admonition,{title:"Reference",type:"tip",children:(0,i.jsxs)(t.p,{children:["Refer here to know how to ",(0,i.jsx)(t.a,{href:"/datasources/quickstart/",children:"Connect Databases to Zeromagic"})]})}),"\n",(0,i.jsxs)(t.p,{children:["The created database will be listed in the ",(0,i.jsx)(t.code,{children:"Connectors"})," section in the ",(0,i.jsx)(t.code,{children:"GraphQL Console"})]}),"\n",(0,i.jsx)(t.p,{children:(0,i.jsx)(t.img,{alt:"data-connector",src:a(2e3).A+"",width:"1595",height:"491"})}),"\n",(0,i.jsx)(t.h3,{id:"step-4-create-a-logical-model",children:"Step 4: Create a logical model"}),"\n",(0,i.jsxs)(t.p,{children:["Within each data source, you will see a list of tables displayed in an ",(0,i.jsx)(t.code,{children:"not listed"})," tab initially."]}),"\n",(0,i.jsx)(t.p,{children:(0,i.jsx)(t.img,{alt:"table-manager",src:a(5602).A+"",width:"1251",height:"300"})}),"\n",(0,i.jsxs)(t.p,{children:["To ",(0,i.jsx)(t.strong,{children:"list"})," a table, simply click on it and select the ",(0,i.jsx)(t.code,{children:"list"})," option which will open the model editor."]}),"\n",(0,i.jsxs)(t.blockquote,{children:["\n",(0,i.jsx)(t.p,{children:"A logical model is a representation of your data structure that will be used in your GraphQL schema."}),"\n"]}),"\n",(0,i.jsxs)(t.p,{children:["Here, you can define model fields and relationships, tailoring the model to fit your specific needs. After defining the model click on ",(0,i.jsx)(t.code,{children:"Create Logical Model"})," button to create your logical model."]}),"\n",(0,i.jsx)(t.p,{children:(0,i.jsx)(t.img,{alt:"add-logical-model",src:a(7939).A+"",width:"995",height:"605"})}),"\n",(0,i.jsx)(t.admonition,{title:"Reference",type:"tip",children:(0,i.jsxs)(t.ul,{children:["\n",(0,i.jsx)(t.li,{children:(0,i.jsx)(t.a,{href:"/graphql/dataconnectors/",children:"Learn about Data connectors"})}),"\n",(0,i.jsx)(t.li,{children:(0,i.jsx)(t.a,{href:"/datasources/quickstart/",children:"Connect Databases to Zeromagic"})}),"\n"]})}),"\n",(0,i.jsxs)(t.p,{children:["Once your logical model is defined, the Zeromagic platform will ",(0,i.jsx)(t.strong,{children:"automatically"})," generate the necessary schema for both mutations and queries. This ensures that your data is accurately represented and easily accessible through your GraphQL endpoint."]}),"\n",(0,i.jsxs)(t.p,{children:["The ",(0,i.jsx)(t.code,{children:"Listed"})," tab shows all the tables you've chosen to list. Click on a specific table to view detailed information about the ",(0,i.jsx)(t.code,{children:"logical model"}),". On this page, you can edit model fields and relationships, making adjustments as needed to reflect changes in your data structure or requirements."]}),"\n",(0,i.jsx)(t.p,{children:(0,i.jsx)(t.img,{alt:"listed",src:a(4681).A+"",width:"1437",height:"344"})}),"\n",(0,i.jsx)(t.h3,{id:"step-5-graphql-schema-registry",children:"Step 5: Graphql Schema Registry"}),"\n",(0,i.jsxs)(t.p,{children:["You can view the ",(0,i.jsx)(t.code,{children:"schema"})," by nagivating to the ",(0,i.jsx)(t.code,{children:"GraphQL"})," page."]}),"\n",(0,i.jsx)(t.p,{children:(0,i.jsx)(t.img,{alt:"schema",src:a(6939).A+"",width:"434",height:"497"})}),"\n",(0,i.jsx)(t.admonition,{title:"Note",type:"info",children:(0,i.jsx)(t.p,{children:"The schema is automatically generated based on model fields and cannot be edited."})}),"\n",(0,i.jsx)(t.h3,{id:"step-5-test-in-graphiql",children:"Step 5: Test in GraphiQL"}),"\n",(0,i.jsxs)(t.p,{children:["Click on the ",(0,i.jsx)(t.code,{children:"GraphQL"})," option in the sidebar to open the GraphiQL playground. This interface allows you to test your queries and mutations in real-time, ensuring everything works as expected."]}),"\n",(0,i.jsx)(t.p,{children:"The GraphiQL interface includes three useful menus on the right sidebar:"}),"\n",(0,i.jsxs)(t.ul,{children:["\n",(0,i.jsxs)(t.li,{children:[(0,i.jsx)(t.strong,{children:"Show Documentation Explorer:"})," Access a detailed, interactive representation of your GraphQL schema. This helps you understand the available data types, fields, and relationships within your data."]}),"\n",(0,i.jsxs)(t.li,{children:[(0,i.jsx)(t.strong,{children:"Show History:"})," Review your previously executed queries for quick reference."]}),"\n",(0,i.jsxs)(t.li,{children:[(0,i.jsx)(t.strong,{children:"Show Data Explorer:"})," Visually navigate your data structures and explore them without writing complex queries."]}),"\n"]}),"\n",(0,i.jsx)(t.p,{children:"By following these steps, you will be able to connect your data sources, list tables, and create logical models on the Zeromagic platform. This process streamlines the creation of your GraphQL API, allowing you to focus on building robust and efficient applications. Get started today and experience the power of Zeromagic for yourself!"})]})}function h(e={}){const{wrapper:t}={...(0,n.R)(),...e.components};return t?(0,i.jsx)(t,{...e,children:(0,i.jsx)(d,{...e})}):d(e)}},7939:(e,t,a)=>{a.d(t,{A:()=>i});const i=a.p+"assets/images/add-logical-model-c29d1b3e4ced8ea2bf3e5bf6df3b104a.png"},1921:(e,t,a)=>{a.d(t,{A:()=>i});const i=a.p+"assets/images/create-graph-30adf42d68eddf726eb442bd1ba5fa39.png"},2e3:(e,t,a)=>{a.d(t,{A:()=>i});const i=a.p+"assets/images/data-connector-b4bac7feb653e6330022573e8ceb65a1.png"},4280:(e,t,a)=>{a.d(t,{A:()=>i});const i=a.p+"assets/images/graphql-dashboard-f79b3801931a347983e04ea1dd2bd560.png"},7636:(e,t,a)=>{a.d(t,{A:()=>i});const i=a.p+"assets/images/graphql-thumbnail-3eb1cd484d280593b865409b052839ac.png"},4681:(e,t,a)=>{a.d(t,{A:()=>i});const i=a.p+"assets/images/listed-351b3d505f26ba6bfa340980c23b2b44.png"},6939:(e,t,a)=>{a.d(t,{A:()=>i});const i=a.p+"assets/images/schema-84686af7127935f50f70022b839a43f1.png"},5602:(e,t,a)=>{a.d(t,{A:()=>i});const i=a.p+"assets/images/table-manager-e122f46965d41c50ded519e83de8ed02.png"},8453:(e,t,a)=>{a.d(t,{R:()=>o,x:()=>r});var i=a(6540);const n={},s=i.createContext(n);function o(e){const t=i.useContext(s);return i.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function r(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(n):e.components||n:o(e.components),i.createElement(s.Provider,{value:t},e.children)}}}]);